name: Backend Pipeline
on:
  # Trigger the workflow on push from the main branch
  push:
    branches:
      - main
jobs:
  build:
    name: Build backend app
    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      # Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt
      # Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Build & Test
      - name: Run Build
        run: mvn clean install

      # Create and print the new version
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H.%M.%S')"
      - name: Print version
        run: echo "Version - ${{ steps.date.outputs.date }}"

      # Docker build step
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Docker build & push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/toptal-backend:${{ steps.date.outputs.date }}
          context: .
          file: Dockerfile

      # Create a new git tag
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.date.outputs.date }}
          message: "TAG was created at ${{ steps.date.outputs.date }}"

      # Deploy to dev
      - name: Dev deployment
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.WORKFLOW_TOKEN }}" \
            https://api.github.com/repos/gtskaushik/toptal-ops/actions/workflows/apps.yml/dispatches \
            -d '{"ref":"main","inputs":{"environment":"dev","image_tag":"${{ steps.date.outputs.date }}","appname":"backend"}}'